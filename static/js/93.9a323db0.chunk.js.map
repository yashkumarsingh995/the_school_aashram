{"version":3,"file":"static/js/93.9a323db0.chunk.js","mappings":"oNAkBA,EAhBoB,SAAHA,GAAqB,IAAfC,EAAOD,EAAPC,QACrB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uCAAsCC,SAAA,EACnDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,0CAAyCC,SAAC,YACxDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uDAAsDC,SAClEH,EAAQK,KAAI,SAACC,EAAQC,GAAK,OACzBN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCC,SAAA,EACrDF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,qCAAoCC,SAAA,CAAEI,EAAQ,EAAE,KAAGD,EAAOE,UACxEJ,EAAAA,EAAAA,KAAA,KAAGF,UAAU,qBAAoBC,SAAEG,EAAOG,gBAFiBF,EAGvD,QAKhB,ECyBaG,EAAe,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAO,SAAS,YAAY,UAAU,WAAW,YAQzHC,GALcD,EAAaL,KAAI,WAAQ,OAAuB,IAAhBO,KAAKC,QAAgB,IAK1CH,EAAaL,KAAI,WAAQ,OAAuB,GAAhBO,KAAKC,QAAc,KAC5EC,EAA0BJ,EAAaL,KAAI,WAAQ,OAAuB,GAAhBO,KAAKC,QAAc,IAM5EE,EAAe,CACzB,CAACC,OAAS,QAASC,MAAQ,SAAUC,kBAAoB,MACzD,CAACF,OAAS,UAAWC,MAAQ,SAAUC,kBAAoB,MAC3D,CAACF,OAAS,OAAQC,MAAQ,SAAUC,kBAAoB,MACxD,CAACF,OAAS,UAAWC,MAAQ,SAAUC,kBAAoB,MAC3D,CAACF,OAAS,SAAUC,MAAQ,SAAUC,kBAAoB,MAC1D,CAACF,OAAS,cAAeC,MAAQ,SAAUC,kBAAoB,OAKtDC,EAAuB,EAIvBC,EAAiB,CAAC,IAAK,IAAK,GAAI,GAAI,IACpCC,EAAqB,CAAC,GAAG,GAAG,GAAG,MAAM,IAEpCC,EAAqB,CAAC,YAAY,UAAU,SAAS,sBAAsB,UAC3EC,EAAiB,CAAC,QAAQ,UAAU,OAAO,UAAU,SAAS,eAG/DvB,EAAU,CACnB,CACEQ,MAAO,qCACPC,YAAa,uGAEf,CACED,MAAO,oBACPC,YAAa,2GAEf,CACED,MAAO,mBACPC,YAAa,kIAYNe,EAAc,CACvB,CAAEC,MAAO,UAAWC,QAAS,OAAQC,MAAO,IAC5C,CAAEF,MAAO,UAAWC,QAAS,UAAWC,MAAO,IAC/C,CAAEF,MAAO,WAAYC,QAAS,OAAQC,MAAO,IAC7C,CAAEF,MAAO,WAAYC,QAAS,UAAWC,MAAO,IAChD,CAAEF,MAAO,QAASC,QAAS,OAAQC,MAAO,IAC1C,CAAEF,MAAO,QAASC,QAAS,UAAWC,MAAO,IAC7C,CAAEF,MAAO,QAASC,QAAS,OAAQC,MAAO,IAC1C,CAAEF,MAAO,QAASC,QAAS,UAAWC,MAAO,KAIpCC,EAAqB,CAChC,CACIC,KAAM,aACNC,WAAY,WAEhB,CACID,KAAM,aACNC,WAAY,UAEhB,CACID,KAAM,aACNC,WAAY,WAEhB,CACID,KAAM,aACNC,WAAY,YAKLC,EAAgB,CACzB,CAAEC,KAAM,WAAYC,OAAQ,OAAQC,QAAS,UAAWC,UAAW,UAAWC,SAAU,UAAWC,OAAQ,aAC3G,CAAEL,KAAM,WAAYC,OAAQ,QAASC,QAAS,QAASC,UAAW,QAASC,SAAU,QAASC,OAAQ,SACtG,CAAEL,KAAM,WAAYC,OAAQ,UAAWC,QAAS,YAAaC,UAAW,OAAQC,SAAU,UAAWC,OAAQ,WAC7G,CAAEL,KAAM,WAAYC,OAAQ,QAASC,QAAS,QAASC,UAAW,QAASC,SAAU,QAASC,OAAQ,SACtG,CAAEL,KAAM,WAAYC,OAAQ,UAAWC,QAAS,UAAWC,UAAW,YAAaC,SAAU,OAAQC,OAAQ,WAC7G,CAAEL,KAAM,WAAYC,OAAQ,QAASC,QAAS,QAASC,UAAW,QAASC,SAAU,QAASC,OAAQ,SACtG,CAAEL,KAAM,WAAYC,OAAQ,UAAWC,QAAS,UAAWC,UAAW,UAAWC,SAAU,YAAYC,OAAQ,UAItGC,EAAmB,CAAC,WAAY,YAKhCC,EAAY,CACvB,CACEC,KAAM,sBACNC,OAAQ,YACRf,QAAS,WAEX,CACEc,KAAM,2BACNC,OAAQ,UACRf,QAAS,QAEX,CACEc,KAAM,sBACNC,OAAQ,WACRf,QAAS,cC/Hb,EAlCkB,SAAH3B,GAAqC,IAA/B2C,EAAS3C,EAAT2C,UAAWC,EAAY5C,EAAZ4C,aAC9B,OACE1C,EAAAA,EAAAA,MAAA2C,EAAAA,SAAA,CAAAzC,SAAA,EACCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4BAA2BC,SAAC,iBAC1CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC/BF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,qFAAoFC,SAAA,EACnGC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,cAAaC,UAC5BF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,4DAA2DC,SAAA,EACvEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAWC,SAAC,UAC1BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAWC,SAAC,YAC1BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAWC,SAAC,aAC1BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAWC,SAAC,eAC1BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAWC,SAAC,cAC1BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAWC,SAAC,iBAG9BC,EAAAA,EAAAA,KAAA,SAAAD,SACGuC,EAAUrC,KAAI,SAACwC,EAAMtC,GAAK,OACzBN,EAAAA,EAAAA,MAAA,MAAgBC,UAAS,iBAAA4C,OAAmBH,EAAaI,SAASF,EAAKb,MAAQ,gBAAkB,gBAAiB7B,SAAA,EAChHC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,SAAE0C,EAAKb,QACvC5B,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,SAAE0C,EAAKZ,UACvC7B,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,SAAE0C,EAAKX,WACvC9B,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,SAAE0C,EAAKV,aACvC/B,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,SAAE0C,EAAKT,YACvChC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,SAAE0C,EAAKR,WANhC9B,EAOJ,aAOjB,EC1BIyC,EAAU,EA0Gd,MAzGA,SAAuBjD,GAAoE,IAAjEkD,EAAMlD,EAANkD,OAAOC,EAAQnD,EAARmD,SAAU1C,EAAKT,EAALS,MAAO2C,EAAIpD,EAAJoD,KAAMC,EAAKrD,EAALqD,MAAO3C,EAAWV,EAAXU,YAAa4C,EAAUtD,EAAVsD,WAEpEC,EAAe,CACnBC,QAAS,CACPC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,wBACXC,MAAO,MACPC,OAAQ,MACRC,gBAAiB,OACjBC,UAAW,mCACXC,aAAc,OACdC,OAAQ,OAIZ,SAASC,IAEHC,OAAOC,WAAW,sBAAsBC,SAE1ClB,EAAaC,QAAQQ,MAAQ,MAC7BT,EAAaC,QAAQI,MAAQ,MAC7BL,EAAaC,QAAQG,KAAO,OAC5BJ,EAAaC,QAAQO,UAAY,uBAGjCR,EAAaC,QAAQQ,MAAQ,MAC7BT,EAAaC,QAAQI,MAAQ,OAC7BL,EAAaC,QAAQG,KAAO,MAC5BJ,EAAaC,QAAQO,UAAY,wBAErC,CAGAO,IAGAC,OAAOG,iBAAiB,SAAUJ,GAElC,IAAMK,EAAS,CAAC,UAAW,WAE3BC,GAA0BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAiCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzCE,EAAWD,EAAA,GAAEE,EAASF,EAAA,GA8B7B,OAlBAG,EAAAA,EAAAA,YAAU,WACR,IAAIC,EAAa,KAMjB,OALiB,IAAbpC,GAAmBiC,GAAyB,IAAVnC,IACpCsC,EAAaC,aAAY,WACvBP,GAAS,SAACQ,GAAS,OAAMA,CAAS,GACpC,GAAG,MAEE,WACDF,GAAYG,cAAcH,EAChC,CACF,GAAG,CAACH,EAAajC,KASfjD,EAAAA,EAAAA,MAAA2C,EAAAA,SAAA,CAAAzC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OACEF,UAAW,UARE,IAAbgD,EACK6B,EAAQ,eAAiB,eACtB,IAORW,QAAsB,IAAbxC,GAA6B,IAAXD,EAhCjC,WACEmC,GAAU,EACZ,EA8B2DO,QAAQC,IAAI,KAAKzF,UAEtEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OAAKF,UAAS,oBAAA4C,OAAsB4B,EAAOrB,EAAa,IAAKlD,SAC1DgD,KAEH/C,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,SAAEK,KAC7BJ,EAAAA,EAAAA,KAAA,OAAKF,UAAS,mBAAA4C,OAAqB4B,EAAOrB,EAAa,IAAKlD,SACzDiD,KAEHhD,EAAAA,EAAAA,KAAA,OAAAD,SAAMM,UAGVL,EAAAA,EAAAA,KAACyF,IAAK,CACJC,OAAQX,EACRY,eA3CN,WACEX,GAAU,GACVpC,IACAgC,GAAS,EACX,EAwCMgB,MAAO1C,EAAanD,SAEV,IAAT8C,GAAW7C,EAAAA,EAAAA,KAAC6F,EAAS,CAACvD,UAAWX,EAAeY,aAAcL,KACtElC,EAAAA,EAAAA,KAAC8F,EAAW,CAAClG,QAASA,QAIvB,E,UC9FA,EAhBiB,SAAHD,GAAmB,IAAboG,EAAKpG,EAALoG,MAClB,OACE/F,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qEAAoEC,SAChFgG,EAAM9F,KAAI,SAAC+F,EAAM7F,GAAK,OACrBN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wEAAuEC,SAAA,EACpFC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,2BAA0BC,SAAEiG,EAAK5D,QAC/CvC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4DAA2DC,SAAA,EACxEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iDAAgDC,SAAA,CAAC,WAASiG,EAAK3D,WAC9ExC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iDAAgDC,SAAA,CAAC,YAAUiG,EAAK1E,gBAJSnB,EAMtF,KAId,ECXM+C,EAAe,CACjBC,QAAS,CACLE,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,wBACXC,MAAO,QACPC,OAAQ,QACRC,gBAAiB,OACjBC,UAAW,mCACXC,aAAc,SAItB0B,IAAAA,cAAoB,SAsDpB,MApDA,SAAoB9F,IAAMsG,EAAAA,EAAAA,GAAAtG,GACtB,IAEIuG,EAFJ3B,GAAiCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCQ,EAAWN,EAAA,GAAEO,EAASP,EAAA,GAyB7B,OACI5E,EAAAA,EAAAA,MAAA2C,EAAAA,SAAA,CAAAzC,SAAA,EACIC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAA0BC,UACrCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACtBF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,SAAC,mBAC5BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,SAAEgB,QAEjCf,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBAAoBC,UAC/BC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,aAAawF,QA/BnD,WACIN,GAAU,EACd,EA6BsEjF,SAAC,uBAI/DC,EAAAA,EAAAA,KAACyF,IAAK,CACFC,OAAQX,EACRoB,YAjCZ,WAEID,EAASN,MAAMQ,MAAQ,MAC3B,EA+BYT,eA7BZ,WACIX,GAAU,EACd,EA4BYY,MAAO1C,EACPmD,aAAa,gBAAetG,UAE5BC,EAAAA,EAAAA,KAACsG,EAAQ,CAACP,MAAO5D,QAIjC,E,wCCnEA,MANC,SAAiBxC,GAAyB,IAAvB4G,EAAU5G,EAAV4G,WAAYxG,EAAQJ,EAARI,SAC5B,OACIC,EAAAA,EAAAA,KAAA,OAAKF,UAAS,yBAAA4C,OAA2B6D,GAAaxG,SAAEA,GAEhE,ECyBE,MA1BA,SAAkBJ,GAA+C,IAA7CS,EAAKT,EAALS,MAAOL,EAAQJ,EAARI,SAAUyG,EAAS7G,EAAT6G,UAAWC,EAAc9G,EAAd8G,eAC5C,OACI5G,EAAAA,EAAAA,MAAA,OAAKC,UAAW,0CAA4C0G,GAAa,QAAQzG,SAAA,EAG7EF,EAAAA,EAAAA,MAAC6G,EAAQ,CAACH,WAAYE,EAAiB,eAAiB,GAAG1G,SAAA,CACxDK,EAIGqG,IAAkBzG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAA0BC,SAAE0G,QAInEzG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAGfE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iCAAgCC,SAC1CA,MAKjB,ECeF,MAlCA,WACI,OACIC,EAAAA,EAAAA,KAAC2G,EAAS,CAACvG,MAAO,WAAWL,UAExBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC7BF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SAAAD,UACAF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,MAAIF,UAAU,cAAaC,SAAC,aAC5BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,cAAaC,SAAC,WAC5BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,cAAaC,SAAC,oBAGhCC,EAAAA,EAAAA,KAAA,SAAAD,SAEQY,EAAaV,KAAI,SAAC2G,EAAGC,GACjB,OACIhH,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAK8G,EAAE,KACP7G,EAAAA,EAAAA,KAAA,MAAAD,SAAK6G,EAAEhG,UACPZ,EAAAA,EAAAA,KAAA,MAAAD,SAAK6G,EAAE/F,SACPb,EAAAA,EAAAA,KAAA,MAAAD,SAAA,GAAA2C,OAAQkE,EAAE9F,kBAAiB,SAJtB+F,EAOjB,YAO5B,E,mBCbMC,EAAe,SAAHC,GAAkB,IAAZC,EAAID,EAAJC,KAChBC,EAAYC,EAAAA,OAAa,MAGzBC,EAAWC,MAAMC,KAAK,IAAIC,IAAIN,EAAK/G,KAAI,SAACsH,GAAM,OAAKA,EAAOjG,OAAO,MACjEkG,EAAkBL,EAASlH,KAAI,SAACqB,GACpC,IAAMmG,EAAcT,EAAKU,QAAO,SAACH,GAAM,OAAKA,EAAOjG,UAAYA,CAAO,IAChEqG,EACJF,EAAYG,QAAO,SAACC,EAAON,GAAM,OAAKM,EAAQN,EAAOhG,KAAK,GAAE,GAC5DkG,EAAYK,OACd,MAAO,CAAExG,QAAAA,EAASqG,QAAAA,EACpB,IAmCA,OAjCAT,EAAAA,WAAgB,WACd,IAAMa,EAAMd,EAAUe,QAAQC,WAAW,MACnCC,EAAQ,IAAIC,EAAAA,GAAMJ,EAAK,CAC3BK,KAAM,MACNpB,KAAM,CACJqB,OAAQlB,EACRmB,SAAU,CACR,CACEC,MAAO,gBACPvB,KAAMQ,EAAgBvH,KAAI,SAACuI,GAAc,OAAKA,EAAeb,OAAO,IACpE9D,gBAAiB,0BACjB4E,YAAa,oBACbC,YAAa,KAInBC,QAAS,CACPC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,aAAa,SAOzB,OAAO,WACLb,EAAMc,SACR,CACF,GAAG,CAACxB,KAGF3H,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,sBAAqBC,SAAC,+BACpCC,EAAAA,EAAAA,KAAA,UAAQiJ,IAAKhC,MAGnB,ECTA,EAjE0B,SAAHtH,GAAyB,IAAnByB,EAAWzB,EAAXyB,YAC3BmD,GAA0CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/C2E,EAAazE,EAAA,GAAE0E,EAAgB1E,EAAA,GAMhC2E,EAAiC,KAAlBF,EACjB9H,EAAYsG,QAAO,SAACH,GAAM,OAAKA,EAAOlG,QAAU6H,CAAa,IAC7D9H,EAEEiI,EAAeD,EAAaxB,QAAO,SAACL,EAAQ+B,GAEhD,OADC/B,EAAO+B,EAAajI,OAASkG,EAAO+B,EAAajI,QAAU,IAAIkI,KAAKD,GAC9D/B,CACT,GAAG,CAAC,GAEJ,OACE1H,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uBAAsBC,SAAC,qBACrCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBF,EAAAA,EAAAA,MAAA,UACEmD,MAAOkG,EACPM,SAAU,SAAAC,GAAC,OAnBWpI,EAmBcoI,EAAEC,OAAO1G,WAlBnDmG,EAAiB9H,GADU,IAACA,CAmB6B,EACnDvB,UAAU,2EAA0EC,SAAA,EAEpFC,EAAAA,EAAAA,KAAA,UAAQgD,MAAM,GAAEjD,SAAC,QAChBqH,MAAMC,KAAK,IAAIC,IAAIlG,EAAYnB,KAAI,SAAAsH,GAAM,OAAIA,EAAOlG,KAAK,MAAIpB,KAAI,SAAAoB,GAAK,OACrErB,EAAAA,EAAAA,KAAA,UAAoBgD,MAAO3B,EAAMtB,SAC9BsB,GADUA,EAEJ,UAIfxB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,8BAA6BC,SAAA,EAC5CC,EAAAA,EAAAA,KAAA,SAAAD,UACEF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,cAAaC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,kBAAiBC,SAAC,WAChCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,kBAAiBC,SAAC,aAChCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,kBAAiBC,SAAC,gBAGpCC,EAAAA,EAAAA,KAAA,SAAAD,SACG4J,OAAOC,QAAQP,GAAcpJ,KAAI,SAAA8G,GAAA,IAAA8C,GAAAnF,EAAAA,EAAAA,GAAAqC,EAAA,GAAE1F,EAAKwI,EAAA,GAAE1C,EAAQ0C,EAAA,UACjDhK,EAAAA,EAAAA,MAACqH,EAAAA,SAAc,CAAAnH,SAAA,EACbC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,+CAA8CC,UAC1DC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oBAAoBgK,QAAQ,IAAG/J,SAAEsB,MAEhD8F,EAASlH,KAAI,SAAAqB,GAAO,OACnBzB,EAAAA,EAAAA,MAAA,MAA0BC,UAAU,2BAA0BC,SAAA,EAC5DC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,SACdE,EAAAA,EAAAA,KAAA,MAAIF,UAAU,0BAAyBC,SAAEuB,EAAQA,WACjDtB,EAAAA,EAAAA,KAAA,MAAIF,UAAU,0BAAyBC,SAAEuB,EAAQC,UAH1CD,EAAQyI,QAIZ,MATY1I,EAWJ,UAIvBrB,EAAAA,EAAAA,KAACmI,EAAK,CAACnB,KAAMoC,SAIrB,EC/CMlG,EAAe,CACnBC,QAAS,CACPC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,wBACXC,MAAO,MACPC,OAAQ,MACRC,gBAAiB,OACjBC,UAAW,mCACXC,aAAc,OACdC,OAAQ,OAIZ,SAASC,IAEHC,OAAOC,WAAW,sBAAsBC,SAE1ClB,EAAaC,QAAQQ,MAAQ,MAC7BT,EAAaC,QAAQI,MAAQ,MAC7BL,EAAaC,QAAQG,KAAO,OAC5BJ,EAAaC,QAAQO,UAAY,uBAGjCR,EAAaC,QAAQQ,MAAQ,MAC7BT,EAAaC,QAAQI,MAAQ,OAC7BL,EAAaC,QAAQG,KAAO,MAC5BJ,EAAaC,QAAQO,UAAY,wBAErC,CAGAO,IAGAC,OAAOG,iBAAiB,SAAUJ,GAGlC+F,EAAAA,GAAAA,SACEC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,EACAC,EAAAA,GACAC,EAAAA,IAGF/E,IAAAA,cAAoB,SAuEpB,MArEA,WAEE,IAAIS,EACJ3B,GAAiCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCQ,EAAWN,EAAA,GAAEO,EAASP,EAAA,GA0BvB4D,EAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAExHrB,EAAO,CACXqB,OAAAA,EACAC,SAAU,CACR,CACEmC,MAAM,EACNlC,MAAO,MACPvB,KAAMqB,EAAOpI,KAAI,WAAQ,OAAuB,IAAhBO,KAAKC,QAAe,IACpDgI,YAAa,oBACb5E,gBAAiB,2BAQvB,OACEhE,EAAAA,EAAAA,MAAA2C,EAAAA,SAAA,CAAAzC,SAAA,EACAF,EAAAA,EAAAA,MAAC8G,EAAS,CAACvG,MAAO,qBAAsBsK,GAAG,YAAW3K,SAAA,EACpDC,EAAAA,EAAAA,KAAC2K,EAAAA,GAAI,CAAC3D,KAAMA,EAAM2B,QA/BN,CACdiC,YAAY,EACZC,QAAS,CACPC,OAAQ,CACN1H,SAAU,YA4BZpD,EAAAA,EAAAA,KAAA,UAAQF,UAAU,yGAAyGwF,QA9C/H,WACEN,GAAU,EACZ,EA4CkJjF,SAAC,gBAIjJC,EAAAA,EAAAA,KAACyF,IAAK,CACFC,OAAQX,EACRoB,YAhDN,WAEED,EAASN,MAAMQ,MAAQ,MACzB,EA8CMT,eA5CN,WACEX,GAAU,EACZ,EA2CMY,MAAO1C,EACPmD,aAAa,gBAAetG,UAE7BC,EAAAA,EAAAA,KAAC+K,EAAiB,CAAC3J,YAAaA,QAIvC,E,oECvIM4J,G,SAAYC,EAAAA,EAAAA,IAAgBC,MAE5BC,GAAqB,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,IAAAK,GAAAC,EAAAA,EAAAA,GAAA,KAAAN,GAAA,QAAAO,EAAAC,UAAA7D,OAAA8D,EAAA,IAAAxE,MAAAsE,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAD,EAAAC,GAAAF,UAAAE,GAgCvB,OAhCuBL,EAAAF,EAAAQ,KAAAC,MAAAT,EAAA,OAAA5I,OAAAkJ,KACzBI,MAAQ,CACN9C,cAAe,MAChBsC,EAEDS,qBAAuB,SAAC5K,GACtBmK,EAAKU,SAAS,CAAEhD,cAAe7H,GACjC,EAACmK,EAEDW,OAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAAWX,EAEnIpC,aAAe,WACb,IAAQF,EAAkBsC,EAAKQ,MAAvB9C,cACAkD,EAAeZ,EAAKa,MAApBD,WAER,OAAyB,OAAlBlD,EACHkD,EAAW1E,QAAO,SAACH,GAAM,OAAKA,EAAO9F,KAAKkB,SAASuG,EAAc,IACjEkD,CACN,EAACZ,EAEDc,OAAS,WAGP,OAFqBd,EAAKpC,eAENnJ,KAAI,SAACsH,GAAM,MAAM,CACnCgF,MAAO,IAAIC,KAAKjF,EAAO9F,MACvBgL,IAAK,IAAID,KAAKjF,EAAO9F,MACrBrB,MAAOmH,EAAO7F,WACdgL,QAAQ,EACR9G,MAAO,CACL/B,gBAAuC,YAAtB0D,EAAO7F,WAA2B,QAAgC,WAAtB6F,EAAO7F,WAA0B,MAAQ,QAEzG,GACH,EAAC8J,CAAC,CA6BD,OA7BAmB,EAAAA,EAAAA,GAAAxB,EAAA,EAAAyB,IAAA,SAAA5J,MAED,WAC4B6J,KAAKb,MAAvB9C,cAAR,IACQoD,EAAWO,KAAXP,OACWO,KAAXV,OAER,OACEtM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uBAAsBC,SAAC,wBACrCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,KAAC8M,EAAAA,EAAQ,CACP9B,UAAWA,EACXsB,OAAQA,IACRS,cAAc,QACdC,YAAY,MACZC,gBAAiB,SAACC,GAChB,MAAO,CACLtH,MAAO,CACL/B,gBAAiBqJ,EAAMtH,MAAM/B,iBAGnC,EACA+B,MAAO,CAAEhC,OAAQ,KACjB9D,UAAU,iBAKpB,KAACqL,CAAA,CA7DwB,CAASgC,EAAAA,WAgEpC,MCnDAnD,EAAAA,GAAAA,SAAiBC,EAAAA,GAAeC,EAAAA,GAAakD,EAAAA,GAAY/C,EAAAA,GAAOC,EAAAA,EAASE,EAAAA,IAEzE,IAAMtH,GAAe,CACnBC,QAAS,CACPC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,wBACXC,MAAO,MACPC,OAAQ,MACRC,gBAAiB,OACjBC,UAAW,mCACXC,aAAc,OACdC,OAAQ,OAIZ,SAASC,KAEHC,OAAOC,WAAW,sBAAsBC,SAE1ClB,GAAaC,QAAQQ,MAAQ,MAC7BT,GAAaC,QAAQI,MAAQ,MAC7BL,GAAaC,QAAQG,KAAO,OAC5BJ,GAAaC,QAAQO,UAAY,uBAGjCR,GAAaC,QAAQQ,MAAQ,MAC7BT,GAAaC,QAAQI,MAAQ,OAC7BL,GAAaC,QAAQG,KAAO,MAC5BJ,GAAaC,QAAQO,UAAY,wBAErC,CAGAO,KAGAC,OAAOG,iBAAiB,SAAUJ,IAwEhC,OApEF,WAEI,IAAIiC,EACJ3B,GAAiCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCQ,EAAWN,EAAA,GAAEO,EAASP,EAAA,GA0BvBuC,EAAO,CACXqB,OAHa,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAI5HC,SAAU,CACR,CACEC,MAAO,SACPvB,KAAMzG,EACNsD,gBAAiB,yBAEnB,CACE0E,MAAO,UACPvB,KAAMtG,EACNmD,gBAAiB,2BAKvB,OACEhE,EAAAA,EAAAA,MAAA2C,EAAAA,SAAA,CAAAzC,SAAA,EACEF,EAAAA,EAAAA,MAAC8G,EAAS,CAACvG,MAAO,cAAcL,SAAA,EAC9BC,EAAAA,EAAAA,KAACqN,EAAAA,GAAG,CAAC1E,QA9BK,CACdiC,YAAY,EACZC,QAAS,CACPC,OAAQ,CACN1H,SAAU,SA0Ba4D,KAAMA,KAC7BhH,EAAAA,EAAAA,KAAA,UAAQF,UAAU,yGAAyGwF,QA5CjI,WACEN,GAAU,EACZ,EA0CoJjF,SAAC,gBAIjJC,EAAAA,EAAAA,KAACyF,IAAK,CACJC,OAAQX,EACRoB,YA9CN,WAEED,EAASN,MAAMQ,MAAQ,MACzB,EA4CMT,eA1CN,WACEX,GAAU,EACZ,EAyCMY,MAAO1C,GACPmD,aAAa,gBAAetG,UAE5BC,EAAAA,EAAAA,KAACsN,GAAqB,CAAClB,WAAY5K,QAK3C,ECtHFwI,EAAAA,GAAAA,SAAiBuD,EAAAA,GAAYjD,EAAAA,EAASE,EAAAA,GAClCF,EAAAA,EACAC,EAAAA,GACAC,EAAAA,IAsDJ,OAhDA,SAAsB7K,GAAyB,IAAvBqD,EAAKrD,EAALqD,MAAMwK,EAAO7N,EAAP6N,QAalBxG,EAAO,CACXqB,OAdoC1I,EAAN0I,OAe9BC,SAAU,CACN,CACIC,MAAO,cACPvB,KAAMhE,EACNa,gBAAiB,CACf,0BACA,0BACA,0BACA,0BACA,4BAGF4E,YAAa,CACX,wBACA,wBACA,wBACA,wBACA,0BAGFC,YAAa,KAKzB,OACI1I,EAAAA,EAAAA,KAAC2G,EAAS,CAACvG,MAAOoN,EAAQzN,UAClBC,EAAAA,EAAAA,KAACyN,EAAAA,GAAQ,CAAC9E,QAxCN,CACZiC,YAAY,EACZC,QAAS,CACPC,OAAQ,CACN1H,SAAU,SAoCsB4D,KAAMA,KAGlD,ECjDM0G,GAAY,CACd,CAAC7K,OAAO,EAAEC,SAAU,EAAG1C,MAAQ,cAAe4C,MAAK,GAAAN,OdcbiL,Gcd4C,KAAK5K,MAAO/C,EAAAA,EAAAA,KAAC4N,EAAAA,EAAa,CAAC9N,UAAU,YAAaO,YAAW,GAAAqC,OdY1G,GcZuI,KAAAA,OdWvI,KcVrC,CAACG,OAAO,EAAEC,SAAU,EAAG1C,MAAQ,cAAe4C,MAAK,GAAAN,OdiBZ,GcjB4C,KAAKK,MAAO/C,EAAAA,EAAAA,KAAC6N,EAAAA,EAAc,CAAC/N,UAAU,YAAaO,YAAc,iBACpJ,CAACwC,OAAO,EAAEC,SAAU,EAAG1C,MAAQ,eAAgB4C,MAAQ,KAAMD,MAAO/C,EAAAA,EAAAA,KAAC8N,EAAAA,EAAe,CAAChO,UAAU,YAAaO,YAAc,iBAC1H,CAACwC,OAAO,EAAEC,SAAU,EAAG1C,MAAQ,aAAc4C,MAAQ,GAAID,MAAO/C,EAAAA,EAAAA,KAAC+N,EAAAA,EAAS,CAACjO,UAAU,YAAaO,YAAc,KA8DpH,OAzDA,WAUI,OACIR,EAAAA,EAAAA,MAAA2C,EAAAA,SAAA,CAAAzC,SAAA,EAKIC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4DAA2DC,SAElE2N,GAAUzN,KAAI,SAAC+N,EAAGnH,GACd,OACI7G,EAAAA,EAAAA,KAACiO,GAAcC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAaF,GAAC,IAAE/K,WAAY4D,IAAtBA,EAE7B,OAKRhH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6CAA4CC,SAAA,EACvDC,EAAAA,EAAAA,KAACmO,EAAS,KACVnO,EAAAA,EAAAA,KAACoO,GAAQ,QAMbvO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6CAA4CC,SAAA,EACvDC,EAAAA,EAAAA,KAACqO,EAAY,KACbrO,EAAAA,EAAAA,KAACsO,GAAa,CAACtL,MAAO/B,EAAoBuM,QAAS,2BAA4BnF,OAAQlH,QAK3FnB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6CAA4CC,UAEvDC,EAAAA,EAAAA,KAACsO,GAAa,CAACtL,MAAOhC,EAAgBwM,QAAS,4BAA6BnF,OAAQnH,OAItFlB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,8CAA6CC,UAC1DC,EAAAA,EAAAA,KAACuO,EAAW,QAM5B,C,+GCxEMC,EAAY,QACZC,EAAoB,EA8D1B,MA3DA,WAII,OACIzO,EAAAA,EAAAA,KAAAwC,EAAAA,SAAA,CAAAzC,UACIF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4DAA2DC,SAAA,EAItEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,GAAEC,SAAA,EACbC,EAAAA,EAAAA,KAAA,SAAO0O,QAAQ,sBAAsB5O,UAAU,0CAAyCC,UACxFC,EAAAA,EAAAA,KAAC2O,EAAAA,EAAS,CAAC7O,UAAU,4BACrBE,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8BAA6BC,SAAEyO,QAKrD3O,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EAOvBC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,iCAAgCC,UAC9CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACtBC,EAAAA,EAAAA,KAAC4O,EAAAA,EAAQ,CAAC9O,UAAU,YACnB2O,EAAoB,GAAIzO,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gDAA+CC,SAAE0O,IAA4B,WAM9H5O,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BC,SAAA,EACvCC,EAAAA,EAAAA,KAAA,SAAO6O,SAAU,EAAG/O,UAAU,kCAAiCC,UAC3DC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAmBC,UAClCC,EAAAA,EAAAA,KAAA,OAAK8O,IAAI,oCAAoCC,IAAI,iBAGrDlP,EAAAA,EAAAA,MAAA,MAAIgP,SAAU,EAAG/O,UAAU,kFAAiFC,SAAA,EACxGC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,qBAOdE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mCASvC,E,UCpCA,MA1BA,WAEI,IAAMkP,GAAiBC,EAAAA,EAAAA,QAAO,MAS5B,OANFhK,EAAAA,EAAAA,YAAU,WACN+J,EAAehH,QAAQkH,OAAO,CAC1B7L,IAAK,EACL8L,SAAU,UAEhB,GAAG,CAPa,YASdtP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gCAA+BC,SAAA,EAC1CC,EAAAA,EAAAA,KAACoP,EAAM,KACPvP,EAAAA,EAAAA,MAAA,QAAMC,UAAU,gDAAgDmJ,IAAK+F,EAAejP,SAAA,EAEhFC,EAAAA,EAAAA,KAACqP,EAAAA,SAAQ,CAAAtP,UACNC,EAAAA,EAAAA,KAACsP,EAAAA,QAAO,OAEXtP,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAI/B,E,oBC2BA,EA7Ce,CAEb,CACEyP,KAAM,qBACNxM,MAAM/C,EAAAA,EAAAA,KAACwP,EAAAA,EAAc,CAAC1P,UAPT,YAQbsC,KAAM,a,6ECmCV,MA5CA,SAAoBzC,GAAaA,EAAX8P,YAAc,IAC1BC,GAAWC,EAAAA,EAAAA,MAEjB,OACI9P,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAO0O,QAAQ,sBAAsB5O,UAAU,oBAC/CD,EAAAA,EAAAA,MAAA,MAAIC,UAAU,gDAA+CC,SAAA,EACzDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,+BAKV8P,EAAAA,KAAW,SAACC,EAAOhJ,GACf,OACI7G,EAAAA,EAAAA,KAAA,MAAIF,UAAU,GAAEC,SAER8P,EAAMC,SACF9P,EAAAA,EAAAA,KAAC+P,GAAc7B,EAAAA,EAAAA,GAAA,GAAK2B,KACvBhQ,EAAAA,EAAAA,MAACmQ,EAAAA,GAAO,CACLvD,KAAG,EACHwD,GAAIJ,EAAMN,KACVzP,UAAW,SAAAiH,GAAA,IAAEmJ,EAAQnJ,EAARmJ,SAAQ,SAAAxN,OAASwN,EAAW,8BAAgC,cAAa,EAAGnQ,SAAA,CACrF8P,EAAM9M,KAAK,IAAE8M,EAAMzN,KAEfsN,EAASS,WAAaN,EAAMN,MAAQvP,EAAAA,EAAAA,KAAA,QAAMF,UAAU,wEACpD,cAAY,SAAkB,SAX5B+G,EAkB9B,KAEF7G,EAAAA,EAAAA,KAAA,MAAIF,UAAU,6CAA4CC,UACxDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,UAASC,SAAC,wBAO5C,EC9BA,MAfA,WAEI,OACIC,EAAAA,EAAAA,KAAAwC,EAAAA,SAAA,CAAAzC,UAEEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,SAAO0K,GAAG,sBAAsBtC,KAAK,WAAWtI,UAAU,mBAC1DE,EAAAA,EAAAA,KAACoQ,EAAW,KACZpQ,EAAAA,EAAAA,KAACqQ,EAAW,CAACZ,YAAa,oBAIxC,C","sources":["modules/student/componets/dashboard/NoticeBoard.js","data/Data.js","modules/student/componets/dashboard/Timetable.js","modules/student/componets/dashboard/DashboardStats.js","modules/student/componets/dashboard/BookDetail.js","modules/student/componets/dashboard/AmountStats.js","common/component/Typography/Subtitle.js","common/component/Cards/TitleCard.js","modules/student/componets/dashboard/UserChannels.js","modules/student/componets/dashboard/TandCforRes.js","modules/student/componets/dashboard/DetailResult.js","modules/student/componets/charts/components/LineChart.js","modules/student/componets/dashboard/Calender.js","modules/student/componets/charts/components/Barchart.js","modules/student/componets/charts/components/DoughnutChart.js","modules/student/Student.js","modules/student/layout/Header.js","modules/student/layout/PageContent.js","modules/student/routes/sidebar.js","modules/student/layout/LeftSideBar.js","modules/student/layout/Layout.js"],"sourcesContent":["import React from 'react';\n\nconst NoticeBoard = ({ notices }) => {\n  return (\n    <div className=\"bg-gray-100 p-8 rounded-lg shadow-md\">\n      <h1 className=\"text-2xl font-medium text-gray-800 pb-4\">Notice</h1>\n      <div className=\"grid grid-cols-1 sm:grid-cols-1 md:grid-cols-1 gap-4\">\n        {notices.map((notice, index) => (\n          <div className=\"bg-white shadow-md rounded-lg p-8 mb-8\" key={index}>\n            <h2 className=\"text-2xl font-medium text-gray-800\">{index + 1}. {notice.title}</h2>\n            <p className=\"text-gray-600 mt-4\">{notice.description}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default NoticeBoard;\n","\n// THIS WHOLE DATA IS FOR A SINGLE STUDENT \n// Few more things which you have to add \n// THe student details like its anme address roll number class section teacher guardian name etc should also be added \n// section for the attendence overview\nexport const studentSampleData = {\n  \"Name\": \"Defualt\",\n  \"Father's Name\": \"Father Name\",\n  \"Mother's Name\": \"Mother Name \",\n  \"Date of Birth\": \"26-08-2001\",\n  \"Aadhar Number\": \"1234 2345 2336\",\n  \"Address Line 1\": \"xyz road \",\n  \"Address Line 2\": \"abc city\",\n  \"Pin Code\": \"12346\",\n  \"District\": \"rancom city\",\n  \"State\": \"sample state\",\n  \"Mobile Number\": \"(+91) 123 456 7890\",\n  \"Alternate Mobile Number\": \"\",\n  \"Email ID\": \"yash@theschoolaashram.com\",\n  \"Mother Tongue\": \"\",\n  \"Social Category\": \"\",\n  \"Nationality\": \"\",\n  \"Class\": \"X\",\n  \"Section\": \"a\",\n  \"Class Teacher\": \"Deffulat\",\n  \"Roll Number\": \"23\",\n  \"Student ID\": \"879-xyz-9008\",\n  \"Sports Team\": \"Green Panda\"\n};\n\nexport const attendence_days_total     = 30;\nexport const attendence_days_present   = 21;\n// not required \nexport const attendence_overview_value = (attendence_days_present/attendence_days_total)*100;\n\n// section for the performance overview \n\n export const performance_overview_value = 83;\n\n// section for the marks ( list for the year )\n\nexport const labels_month = ['January', 'February', 'March', 'April', 'May', 'June', 'July',\"August\",\"September\",\"October\",\"November\",\"December\"];\n\n//  [222,34,33,3,24,24,,24,24,2,42,42,4,24,23,4,565,6,66,4,34,,2,,3,5,3,]\nexport const data_result = labels_month.map(() => { return Math.random() * 100  });\n\n\n\n// for the attendence section for the both sections first is for the present( green ) and second is for the absent ( red )\nexport const data_attendence_absent = labels_month.map(() => { return Math.random() * 30 });\nexport const data_attendence_present = labels_month.map(() => { return Math.random() * 30 });\n\n\n\n// this is the data for the student subact table \n\nexport  const data_subject = [\n    {source : \"Hindi\", count : \"26,345\", conversionPercent : 10.2},\n    {source : \"English\", count : \"21,341\", conversionPercent : 11.7},\n    {source : \"Math\", count : \"34,379\", conversionPercent : 12.4},\n    {source : \"Science\", count : \"12,359\", conversionPercent : 20.9},\n    {source : \"Civics\", count : \"10,345\", conversionPercent : 10.3},\n    {source : \"Art & Craft\", count : \"10,345\", conversionPercent : 10.3},\n]\n\n\nexport const data_books_remaining = 5;\nexport const data_books_hand      = 6;\n\n\n\nexport const data_efficieny = [122, 219, 30, 51, 82];\nexport const subject_efficiency = [97,43,82,77.65,59];\n\nexport  const labels_performance = [\"Attndence\",\"Studies\",\"Sports\",\"Cultural Activities\",\"Others\"];\nexport  const labels_subject = [\"Hindi\",\"English\",\"Math\",\"Science\",\"Civics\",\"Art & Craft\"];\n\n\nexport const notices = [\n    {\n      title: \"Upcoming Parent-Teacher Conference\",\n      description: \"We will be holding a Parent-Teacher Conference next week. Please check your email for the schedule.\"\n    },\n    {\n      title: \"Annual Sports Day\",\n      description: \"The Annual Sports Day will be held on Saturday, March 20th. Please come dressed in your school uniform.\"\n    },\n    {\n      title: \"Holiday Homework\",\n      description: \"Kindly note that holiday homework has been uploaded on the school portal. Please complete and submit it before the next term.\"\n    }\n  ];\n  \n\n\n\nexport const notification = [\"Notification 1\",\"Notification 2\",\"Notification 3\",\"Notification 4\",\"Notification 5\"];\n\n\n\n\nexport const studentData = [\n    { month: \"January\", subject: \"Math\", score: 85 },\n    { month: \"January\", subject: \"English\", score: 90 },\n    { month: \"February\", subject: \"Math\", score: 88 },\n    { month: \"February\", subject: \"English\", score: 92 },\n    { month: \"March\", subject: \"Math\", score: 80 },\n    { month: \"March\", subject: \"English\", score: 95 },\n    { month: \"April\", subject: \"Math\", score: 82 },\n    { month: \"April\", subject: \"English\", score: 94 },\n  ];\n  \n\nexport const sampleAttendence =   [\n  {\n      date: '2023-01-01',\n      attendance: 'present'\n  },\n  {\n      date: '2023-01-02',\n      attendance: 'absent'\n  },\n  {\n      date: '2023-01-03',\n      attendance: 'present'\n  },\n  {\n      date: '2023-01-31',\n      attendance: 'present'\n  }\n];\n  \n\nexport const timetableData = [\n    { time: \"10:00 AM\", Monday: \"Math\", Tuesday: \"Science\", Wednesday: \"English\", Thursday: \"History\", Friday: \"Geography\" },\n    { time: \"10:50 AM\", Monday: \"Break\", Tuesday: \"Break\", Wednesday: \"Break\", Thursday: \"Break\", Friday: \"Break\" },\n    { time: \"11:00 AM\", Monday: \"History\", Tuesday: \"Geography\", Wednesday: \"Math\", Thursday: \"Science\", Friday: \"English\" },\n    { time: \"11:50 AM\", Monday: \"Break\", Tuesday: \"Break\", Wednesday: \"Break\", Thursday: \"Break\", Friday: \"Break\" },\n    { time: \"12:00 PM\", Monday: \"English\", Tuesday: \"History\", Wednesday: \"Geography\", Thursday: \"Math\", Friday: \"Science\" },\n    { time: \"12:50 PM\", Monday: \"Break\", Tuesday: \"Break\", Wednesday: \"Break\", Thursday: \"Break\", Friday: \"Break\" },\n    { time: \"01:00 PM\", Monday: \"Science\", Tuesday: \"English\", Wednesday: \"History\", Thursday: \"Geography\",Friday: \"Break\" }\n]\n  \n  \nexport const breakTimingsData = [\"12:00 PM\", \"02:00 PM\"];\n\n\n// Section for the books\n\nexport const booksData = [\n  {\n    name: \"Concepts of physics\",\n    author: \"H C Verma\",\n    subject: \"Physics\"\n  },\n  {\n    name: \"Fundamanetal Mathemetics\",\n    author: \"S N Dey\",\n    subject: \"Math\"\n  },\n  {\n    name: \"Elemental Chemistry\",\n    author: \"P K Nath\",\n    subject: \"Chemistry\"\n  }\n];\n","import React from \"react\";\n\nconst TimeTable = ({ timetable, breakTimings }) => {\n  return (\n    <>\n     <h2 className=\"text-2xl font-medium mb-2\">Time Table </h2>\n     <div className=\"overflow-x-auto\">\n      <table className=\"table-auto w-full text-left bg-gray-50 border border-gray-200 rounded-lg shadow-md\">\n        <thead className=\"bg-gray-200\">\n          <tr className=\"text-xs font-medium uppercase tracking-wide text-gray-700\">\n            <th className=\"px-6 py-4\">Time</th>\n            <th className=\"px-6 py-4\">Monday</th>\n            <th className=\"px-6 py-4\">Tuesday</th>\n            <th className=\"px-6 py-4\">Wednesday</th>\n            <th className=\"px-6 py-4\">Thursday</th>\n            <th className=\"px-6 py-4\">Friday</th>\n          </tr>\n        </thead>\n        <tbody>\n          {timetable.map((slot, index) => (\n            <tr key={index} className={`text-gray-700 ${breakTimings.includes(slot.time) ? 'bg-yellow-100' : 'bg-green-100'}`}>\n              <td className=\"border px-6 py-4\">{slot.time}</td>\n              <td className=\"border px-6 py-4\">{slot.Monday}</td>\n              <td className=\"border px-6 py-4\">{slot.Tuesday}</td>\n              <td className=\"border px-6 py-4\">{slot.Wednesday}</td>\n              <td className=\"border px-6 py-4\">{slot.Thursday}</td>\n              <td className=\"border px-6 py-4\">{slot.Friday}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n     </div>\n    </>\n  );\n};\n\nexport default TimeTable;\n","import Modal from \"react-modal\";\nimport React, { useState, useEffect } from \"react\";\nimport NoticeBoard from \"./NoticeBoard\";\nimport {notices , timetableData ,breakTimingsData} from \"../../../../data/Data\"\nimport TimeTable from \"./Timetable\";\n\n\n// over here the data is passed as the  prop\nvar counter = 0;\nfunction DashboardStats({ gen_id,blink_id, title, icon, value, description, colorIndex }) {\n\n  const customStyles = {\n    content: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n      width: '90%',\n      height: '80%',\n      backgroundColor: '#fff',\n      boxShadow: '0px 10px 20px rgba(0, 0, 0, 0.1)',\n      borderRadius: '10px',\n      zIndex: 9999\n    }\n  };\n  \n  function handleResize() {\n    // Apply styles based on screen width\n    if (window.matchMedia(\"(min-width: 768px)\").matches) {\n      // Apply these styles on screens wider than 768px (laptop screens)\n      customStyles.content.width = '60%';\n      customStyles.content.right = '60%';\n      customStyles.content.left = 'auto';\n      customStyles.content.transform = 'translate(0, -50%)';\n    } else {\n      // Apply these styles on screens smaller than 768px (mobile screens)\n      customStyles.content.width = '90%';\n      customStyles.content.right = 'auto';\n      customStyles.content.left = '50%';\n      customStyles.content.transform = 'translate(-50%, -50%)';\n    }\n  }\n  \n  // Call handleResize on page load\n  handleResize();\n  \n  // Add event listener for screen size changes\n  window.addEventListener('resize', handleResize);\n  \n  const COLORS = [\"primary\", \"primary\"];\n\n  const [blink, setBlink] = useState(false);\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n    counter++;\n    setBlink(false);\n  }\n\n  useEffect(() => {\n    let intervalId = null;\n    if (blink_id === 1 && !modalIsOpen && counter===0) {\n      intervalId = setInterval(() => {\n        setBlink((prevBlink) => !prevBlink);\n      }, 1000);\n    }\n    return () => {\n      if (intervalId) clearInterval(intervalId);\n    };\n  }, [modalIsOpen, blink_id]);\n\n  const getDescStyle = () => {\n    if (blink_id === 1)\n      return blink ? \"bg-green-200\" : \"bg-white-200\";\n    else return \"\";\n  };\n\n  return (\n    <>\n      <div\n        className={\"stats \" + getDescStyle()}\n        onClick={blink_id === 1 || gen_id === 1? openModal : console.log(\" \")}\n      >\n        <div className=\"stat\">\n          <div className={`stat-figure text-${COLORS[colorIndex % 2]}`}>\n            {icon}\n          </div>\n          <div className=\"stat-title\">{title}</div>\n          <div className={`stat-value text-${COLORS[colorIndex % 2]}`}>\n            {value}\n          </div>\n          <div>{description}</div>\n        </div>\n      </div>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n      >\n        {gen_id===1?<TimeTable timetable={timetableData} breakTimings={breakTimingsData} />\n:<NoticeBoard notices={notices}/>}\n      </Modal>\n    </>\n  );\n}\n\nexport default DashboardStats;\n","import React from 'react';\n\nconst BookList = ({ books }) => {\n  return (\n    <div className=\"flex flex-col md:flex-row md:flex-wrap justify-center items-center\">\n      {books.map((book, index) => (\n        <div className=\"flex flex-col mb-4 p-4 bg-white rounded-lg shadow-lg md:w-1/3 md:mx-4\" key={index}>\n          <h3 className=\"font-medium text-lg mb-2\">{book.name}</h3>\n          <div className=\"flex flex-col md:flex-row md:justify-between md:items-end\">\n            <div className=\"font-medium text-sm text-gray-600 mb-2 md:mb-0\">Author: {book.author}</div>\n            <div className=\"font-medium text-sm text-gray-600 mb-2 md:mb-0\">Subject: {book.subject}</div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default BookList;","import { data_books_hand, booksData } from \"../../../../data/Data\"\nimport Modal from \"react-modal\";\nimport BookList from \"./BookDetail\";\nimport { useState } from \"react\";\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n        width: '700px',\n        height: '450px',\n        backgroundColor: \"#fff\",\n        boxShadow: '0px 10px 20px rgba(0, 0, 0, 0.1)',\n        borderRadius: '10px'\n    }\n};\n\nModal.setAppElement('#root');\n\nfunction AmountStats({ }) {\n    const [modalIsOpen, setIsOpen] = useState(false);\n  \n    let subtitle;\n    function openModal() {\n        setIsOpen(true);\n    }\n\n    function afterOpenModal() {\n        // references are now sync'd and can be accessed.\n        subtitle.style.color = '#f00';\n    }\n\n    function closeModal() {\n        setIsOpen(false);\n    }\n\n\n    const options = {\n        responsive: true,\n        plugins: {\n            legend: {\n                position: 'top',\n            },\n        },\n    };\n    return (\n        <>\n            <div className=\"stats bg-base-100 shadow\">\n                <div className=\"stat flex\">\n                    <div>\n                        <div className=\"stat-title\">Books in hand</div>\n                        <div className=\"stat-value\">{data_books_hand}</div>\n                    </div>\n                    <div className=\"stat-actions ml-20\">\n                        <button className=\"btn btn-xs\" onClick={openModal}>View Books</button>\n                    </div>\n                </div>\n            </div>\n            <Modal\n                isOpen={modalIsOpen}\n                onAfterOpen={afterOpenModal}\n                onRequestClose={closeModal}\n                style={customStyles}\n                contentLabel=\"Example Modal\"\n            >\n                <BookList books={booksData}/>\n            </Modal>\n        </>\n    )\n}\n\nexport default AmountStats"," function Subtitle({styleClass, children}){\n    return(\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\n    )\n}\n\nexport default Subtitle","import Subtitle from \"../Typography/Subtitle\"\n\n  \n  function TitleCard({title, children, topMargin, TopSideButtons}){\n      return(\n          <div className={\"card w-full p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-6\")}>\n\n            {/* Title for Card */}\n              <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\n                {title}\n\n                {/* Top side button, show only if present */}\n                {\n                    TopSideButtons && <div className=\"inline-block float-right\">{TopSideButtons}</div>\n                }\n              </Subtitle>\n              \n              <div className=\"divider mt-2\"></div>\n          \n              {/** Card Body */}\n              <div className='h-full w-full pb-6 bg-base-100'>\n                  {children}\n              </div>\n          </div>\n          \n      )\n  }\n  \n  \n  export default TitleCard","import TitleCard from \"../../../../common/component/Cards/TitleCard\"\nimport { data_subject } from \"../../../../data/Data\"\n\n\n\n\n\nfunction UserChannels(){\n    return(\n        <TitleCard title={\"Subjects\"}>\n             {/** Table Data */}\n             <div className=\"overflow-x-auto\">\n                <table className=\"table w-full\">\n                    <thead>\n                    <tr>\n                        <th></th>\n                        <th className=\"normal-case\">Subject</th>\n                        <th className=\"normal-case\">Score</th>\n                        <th className=\"normal-case\">Efficiney</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            data_subject.map((u, k) => {\n                                return(\n                                    <tr key={k}>\n                                        <th>{k+1}</th>\n                                        <td>{u.source}</td>\n                                        <td>{u.count}</td>\n                                        <td>{`${u.conversionPercent}%`}</td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </TitleCard>\n    )\n}\n\nexport default UserChannels","import React from \"react\";\nimport { Chart } from \"chart.js\";\n\nconst Table = ({ data }) => {\n  return (\n    <table className=\"table-auto m-4\">\n      <thead className=\"bg-gray-800 text-white\">\n        <tr>\n          <th className=\"px-4 py-2\">Month</th>\n          <th className=\"px-4 py-2\">Subject</th>\n          <th className=\"px-4 py-2\">Score</th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((result, index) => (\n          <tr key={index} className=\"border-t border-gray-600\">\n            <td className=\"px-4 py-2\">{result.month}</td>\n            <td className=\"px-4 py-2\">{result.subject}</td>\n            <td className=\"px-4 py-2\">{result.score}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nconst ResultsChart = ({ data }) => {\n  const canvasRef = React.useRef(null);\n\n  // Calculate the average score for each subject\n  const subjects = Array.from(new Set(data.map((result) => result.subject)));\n  const subjectAverages = subjects.map((subject) => {\n    const subjectData = data.filter((result) => result.subject === subject);\n    const average =\n      subjectData.reduce((total, result) => total + result.score, 0) /\n      subjectData.length;\n    return { subject, average };\n  });\n\n  React.useEffect(() => {\n    const ctx = canvasRef.current.getContext(\"2d\");\n    const chart = new Chart(ctx, {\n      type: \"bar\",\n      data: {\n        labels: subjects,\n        datasets: [\n          {\n            label: \"Average Score\",\n            data: subjectAverages.map((subjectAverage) => subjectAverage.average),\n            backgroundColor: \"rgba(54, 162, 235, 0.5)\",\n            borderColor: \"rgb(54, 162, 235)\",\n            borderWidth: 1,\n          },\n        ],\n      },\n      options: {\n        scales: {\n          yAxes: [\n            {\n              ticks: {\n                beginAtZero: true,\n              },\n            },\n          ],\n        },\n      },\n    });\n    return () => {\n      chart.destroy();\n    };\n  }, [subjectAverages]);\n\n  return (\n    <div className=\"m-4\">\n      <h3 className=\"text-lg font-medium\">Average Scores by Subject</h3>\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\n\n\n\n\n\nexport { Table, ResultsChart as Chart };","import React, { useState } from \"react\";\nimport { Table, Chart } from \"./TandCforRes\";\nimport \"./detailResult.css\";\n\nconst StudentResultCard = ({ studentData }) => {\n  const [selectedMonth, setSelectedMonth] = useState(\"\");\n\n  const handleMonthSelection = (month) => {\n    setSelectedMonth(month);\n  };\n\n  const filteredData = selectedMonth !== \"\"\n    ? studentData.filter((result) => result.month === selectedMonth)\n    : studentData;\n\n  const groupByMonth = filteredData.reduce((result, currentValue) => {\n    (result[currentValue.month] = result[currentValue.month] || []).push(currentValue);\n    return result;\n  }, {});\n\n  return (\n    <div className=\"p-8 bg-white rounded shadow\">\n      <h2 className=\"text-2xl font-medium\">Student Results</h2>\n      <div className=\"mt-4\">\n        <select\n          value={selectedMonth}\n          onChange={e => handleMonthSelection(e.target.value)}\n          className=\"py-2 px-4 bg-white border border-gray-300 rounded-lg text-sm font-medium\"\n        >\n          <option value=\"\">All</option>\n          {Array.from(new Set(studentData.map(result => result.month))).map(month => (\n            <option key={month} value={month}>\n              {month}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div className=\"flex-container \">\n        <table className=\"w-full table-auto text-left\">\n          <thead>\n            <tr className=\"bg-gray-100\">\n              <th className=\"p-2 font-medium\">Month</th>\n              <th className=\"p-2 font-medium\">Subject</th>\n              <th className=\"p-2 font-medium\">Score</th>\n            </tr>\n          </thead>\n          <tbody>\n            {Object.entries(groupByMonth).map(([month, subjects]) => (\n              <React.Fragment key={month}>\n                <tr className=\"border-t border-gray-300 text-xl font-medium\">\n                  <td className=\"p-2 bg-yellow-200\" colSpan=\"3\">{month}</td>\n                </tr>\n                {subjects.map(subject => (\n                  <tr key={subject.student} className=\"border-t border-gray-300\">\n                    <td className=\"p-2\"></td>\n                    <td className=\"p-2 text-sm font-medium\">{subject.subject}</td>\n                    <td className=\"p-2 text-sm font-medium\">{subject.score}</td>\n                  </tr>\n                ))}\n              </React.Fragment>\n            ))}\n          </tbody>\n        </table>\n        <Chart data={filteredData} />\n      </div>\n    </div>\n  );\n};\n\nexport default StudentResultCard;\n","import {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Filler,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport TitleCard from '../../../../../common/component/Cards/TitleCard';\nimport Modal from \"react-modal\";\nimport { useState } from 'react';\nimport StudentResultCard from '../../dashboard/DetailResult';\nimport {studentData} from \"../../../../../data/Data\"\n\n\n\nconst customStyles = {\n  content: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    width: '90%',\n    height: '80%',\n    backgroundColor: '#fff',\n    boxShadow: '0px 10px 20px rgba(0, 0, 0, 0.1)',\n    borderRadius: '10px',\n    zIndex: 9999\n  }\n};\n\nfunction handleResize() {\n  // Apply styles based on screen width\n  if (window.matchMedia(\"(min-width: 768px)\").matches) {\n    // Apply these styles on screens wider than 768px (laptop screens)\n    customStyles.content.width = '60%';\n    customStyles.content.right = '60%';\n    customStyles.content.left = 'auto';\n    customStyles.content.transform = 'translate(0, -50%)';\n  } else {\n    // Apply these styles on screens smaller than 768px (mobile screens)\n    customStyles.content.width = '90%';\n    customStyles.content.right = 'auto';\n    customStyles.content.left = '50%';\n    customStyles.content.transform = 'translate(-50%, -50%)';\n  }\n}\n\n// Call handleResize on page load\nhandleResize();\n\n// Add event listener for screen size changes\nwindow.addEventListener('resize', handleResize);\n\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Filler,\n  Legend\n);\n\nModal.setAppElement('#root');\n\nfunction LineChart() {\n\n  let subtitle;\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = '#f00';\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n    },\n  };\n\n\n  const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July', \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        fill: true,\n        label: 'MTS',\n        data: labels.map(() => { return Math.random() * 100 }),  // data sections \n        borderColor: 'rgb(53, 162, 235)',\n        backgroundColor: 'rgba(0, 162, 255,0.5)',\n      },\n    ],\n  };\n\n\n  // console.log(data)\n\n  return (\n    <>\n    <TitleCard title={\"Monthly Test Score\"} id=\"lineModal\">\n      <Line data={data} options={options} />\n      <button className=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\" onClick={openModal}>\n        Details\n      </button>\n    </TitleCard>\n    <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Example Modal\"\n      >\n       <StudentResultCard studentData={studentData}/>\n      </Modal>\n    </>\n  )\n}\n\n\nexport default LineChart","import React, { Component } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport \"./calender.css\"\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nconst localizer = momentLocalizer(moment);\n\nclass StudentAttendanceCard extends Component {\n  state = {\n    selectedMonth: null,\n  };\n\n  handleMonthSelection = (month) => {\n    this.setState({ selectedMonth: month });\n  };\n\n  months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n  filteredData = () => {\n    const { selectedMonth } = this.state;\n    const { sampleData } = this.props;\n\n    return selectedMonth !== null\n      ? sampleData.filter((result) => result.date.includes(selectedMonth))\n      : sampleData;\n  };\n\n  events = () => {\n    const filteredData = this.filteredData();\n  \n    return filteredData.map((result) => ({\n      start: new Date(result.date),\n      end: new Date(result.date),\n      title: result.attendance,\n      allDay: true,\n      style: {\n        backgroundColor: result.attendance === 'present' ? 'green' : result.attendance === 'absent' ? 'red' : 'grey',\n      },\n    }));\n  };\n\n  render() {\n    const { selectedMonth } = this.state;\n    const { events } = this;\n    const { months } = this;\n\n    return (\n      <div className=\"p-8 bg-white rounded shadow\">\n        <h2 className=\"text-2xl font-medium\">Student Attendance</h2>\n        <div className=\"mt-4\">\n          <Calendar\n            localizer={localizer}\n            events={events()}\n            startAccessor=\"start\"\n            endAccessor=\"end\"\n            eventPropGetter={(event) => {\n              return {\n                style: {\n                  backgroundColor: event.style.backgroundColor,\n                },\n              };\n            }}\n            style={{ height: 500 }}\n            className=\"calendar\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StudentAttendanceCard;","import {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n  } from 'chart.js';\n\n  import { Bar } from 'react-chartjs-2';\n\n  import TitleCard from '../../../../../common/component/Cards/TitleCard';\n  \n  import { sampleAttendence , data_attendence_absent, data_attendence_present } from '../../../../../data/Data';\n\nimport Modal from \"react-modal\";\n\nimport { useState } from 'react';\nimport StudentAttendenceCard from '../../dashboard/Calender';\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nconst customStyles = {\n  content: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    width: '90%',\n    height: '80%',\n    backgroundColor: '#fff',\n    boxShadow: '0px 10px 20px rgba(0, 0, 0, 0.1)',\n    borderRadius: '10px',\n    zIndex: 9999\n  }\n};\n\nfunction handleResize() {\n  // Apply styles based on screen width\n  if (window.matchMedia(\"(min-width: 768px)\").matches) {\n    // Apply these styles on screens wider than 768px (laptop screens)\n    customStyles.content.width = '60%';\n    customStyles.content.right = '60%';\n    customStyles.content.left = 'auto';\n    customStyles.content.transform = 'translate(0, -50%)';\n  } else {\n    // Apply these styles on screens smaller than 768px (mobile screens)\n    customStyles.content.width = '90%';\n    customStyles.content.right = 'auto';\n    customStyles.content.left = '50%';\n    customStyles.content.transform = 'translate(-50%, -50%)';\n  }\n}\n\n// Call handleResize on page load\nhandleResize();\n\n// Add event listener for screen size changes\nwindow.addEventListener('resize', handleResize);\n\n\n\nfunction BarChart() {\n\n    let subtitle;\n    const [modalIsOpen, setIsOpen] = useState(false);\n  \n    function openModal() {\n      setIsOpen(true);\n    }\n  \n    function afterOpenModal() {\n      // references are now sync'd and can be accessed.\n      subtitle.style.color = '#f00';\n    }\n  \n    function closeModal() {\n      setIsOpen(false);\n    }\n  \n    const options = {\n      responsive: true,\n      plugins: {\n        legend: {\n          position: 'top',\n        }\n      },\n    };\n  \n    const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July', \"August\", \"September\", \"October\", \"November\", \"December\"];\n  \n    const data = {\n      labels,\n      datasets: [\n        {\n          label: 'Absent',\n          data: data_attendence_absent,\n          backgroundColor: 'rgba(255, 99, 132, 1)',\n        },\n        {\n          label: 'Present',\n          data: data_attendence_present,\n          backgroundColor: 'rgba(53, 235, 162, 1)',\n        },\n      ],\n    };\n  \n    return (\n      <>\n        <TitleCard title={\"Attendence \"}>\n          <Bar options={options} data={data} />\n          <button className=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\" onClick={openModal}>\n            Details\n          </button>\n        </TitleCard>\n        <Modal\n          isOpen={modalIsOpen}\n          onAfterOpen={afterOpenModal}\n          onRequestClose={closeModal}\n          style={customStyles}\n          contentLabel=\"Example Modal\"\n        >\n          <StudentAttendenceCard sampleData={sampleAttendence}/>\n        </Modal>\n  \n      </>\n    )\n  }\n  \n  \n  export default BarChart\n\n\n\n\n\n\n\n\n","import {\n  Chart as ChartJS,\n  Filler,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport TitleCard from '../../../../../common/component/Cards/TitleCard';\nimport Subtitle from '../../../../../common/component/Typography/Subtitle';\n\n\nChartJS.register(ArcElement, Tooltip, Legend,\n    Tooltip,\n    Filler,\n    Legend);\n\n\n\n// In this we are making the adding the data but we need to update this data as well from the store only\n\nfunction DoughnutChart({value,heading,labels}){\n\n    const options = {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'top',\n          },\n        },\n      };\n      \n     \n      \n      const data = {\n        labels,\n        datasets: [\n            {\n                label: 'effficiency',\n                data: value,\n                backgroundColor: [\n                  'rgba(255, 99, 132, 0.8)',\n                  'rgba(54, 162, 235, 0.8)',\n                  'rgba(255, 206, 86, 0.8)',\n                  'rgba(75, 192, 192, 0.8)',\n                  'rgba(153, 102, 255, 0.8)',\n                 \n                ],\n                borderColor: [\n                  'rgba(255, 99, 132, 1)',\n                  'rgba(54, 162, 235, 1)',\n                  'rgba(255, 206, 86, 1)',\n                  'rgba(75, 192, 192, 1)',\n                  'rgba(153, 102, 255, 1)',\n                  \n                ],\n                borderWidth: 1,\n              }\n        ],\n      };\n\n    return(\n        <TitleCard title={heading}>\n                <Doughnut options={options} data={data} />\n        </TitleCard>\n    )\n}\n\n\nexport default DoughnutChart","import DashboardStats from './componets/dashboard/DashboardStats'\nimport AmountStats from './componets/dashboard/AmountStats'\n\n\nimport UserGroupIcon  from '@heroicons/react/24/outline/UserGroupIcon'\nimport UsersIcon  from '@heroicons/react/24/outline/UsersIcon'\nimport CircleStackIcon  from '@heroicons/react/24/outline/CircleStackIcon'\nimport CreditCardIcon  from '@heroicons/react/24/outline/CreditCardIcon'\nimport UserChannels from './componets/dashboard/UserChannels'\nimport LineChart from './componets/charts/components/LineChart'\nimport BarChart from './componets/charts/components/Barchart'\nimport DashboardTopBar from './componets/dashboard/DashboardTopBar'\n// This should be used in the redux store\n// import {showNotification} from '../common/headerSlice'\nimport DoughnutChart from './componets/charts/components/DoughnutChart'\n// The Data section \nimport { attendence_days_total, attendence_overview_value,attendence_days_present,performance_overview_value ,data_efficieny,subject_efficiency,labels_performance,labels_subject} from \"../../data/Data\"\n\nconst statsData = [\n    {gen_id:0,blink_id :0, title : \"Attendence \", value : `${attendence_overview_value}%`, icon : <UserGroupIcon className='w-8 h-8'/>, description : `${attendence_days_present}/${attendence_days_total}`},\n    {gen_id:0,blink_id :0, title : \"Performance\", value : `${performance_overview_value}%`, icon : <CreditCardIcon className='w-8 h-8'/>, description : \"Current month\"},\n    {gen_id:0,blink_id :1, title : \"Notice Board\", value : \"10\", icon : <CircleStackIcon className='w-8 h-8'/>, description : \"4 new notices\"},\n    {gen_id:1,blink_id :0, title : \"Time Table\", value : \"\", icon : <UsersIcon className='w-8 h-8'/>, description : \"\"},\n]\n\n\n\nfunction Student(){\n\n\n    // This we have to add in the redux store\n    // const dispatch = useDispatch()\n\n    // const updateDashboardPeriod = (newRange) => {\n    //     // Dashboard range changed, write code to refresh your values\n    //     dispatch(showNotification({message : `Period updated to ${newRange}`, status : 1}))\n    // }\n    return(\n        <>\n        {/** ---------------------- Select Period Content ------------------------- */}\n            {/* <DashboardTopBar updateDashboardPeriod={updateDashboardPeriod}/> */}\n        \n        {/** ---------------------- Different stats content 1 ------------------------- */}\n            <div className=\"grid lg:grid-cols-4 mt-8 md:grid-cols-2 grid-cols-1 gap-6\">\n                {\n                    statsData.map((d, k) => {\n                        return (\n                            <DashboardStats key={k} {...d} colorIndex={k}/>\n                        )\n                    })\n                }\n            </div>\n\n        {/** ---------------------- Different charts ------------------------- */}\n            <div className=\"grid lg:grid-cols-2 mt-4 grid-cols-1 gap-6\">\n                <LineChart />\n                <BarChart />\n            </div>\n            \n      \n        {/** ---------------------- User source channels table  ------------------------- */}\n        \n            <div className=\"grid lg:grid-cols-2 mt-4 grid-cols-1 gap-6\">\n                <UserChannels  />\n                <DoughnutChart value={subject_efficiency} heading={\"Subject wise Performance\"} labels={labels_subject}/>\n            </div>\n\n            {/* for the activity stats  */}\n\n            <div className=\"grid lg:grid-cols-2 mt-4 grid-cols-1 gap-6\">\n                \n                <DoughnutChart value={data_efficieny} heading={\"Activity wise performance\"} labels={labels_performance}/>\n            </div>\n              {/** ---------------------- Different stats content 2 ------------------------- */}\n        \n              <div className=\"grid lg:grid-cols-2 mt-10 grid-cols-1 gap-6\">\n                <AmountStats />\n                {/* <PageStats /> */}\n            </div>\n\n        </>\n    )\n}\n\nexport default Student;","import React , {useState,useEffect} from 'react';\n// import { useSelector, useDispatch } from 'react-redux'\n\nimport BellIcon  from '@heroicons/react/24/outline/BellIcon'\nimport Bars3Icon  from '@heroicons/react/24/outline/Bars3Icon'\n\nimport { NavLink,Routes,Link,useLocation } from 'react-router-dom';\n\n// over here noOfNotifications,pageTitle are the data which is being fetched by the store \n\nconst pageTitle = \"Title\";\nconst noOfNotifications = 5;\n\n\nfunction Header()\n{\n    // We have to use here the redux store for the notification \n\n    return(\n        <>\n            <div className=\"navbar  flex justify-between bg-base-100  z-10 shadow-md \">\n\n\n                {/* Menu toogle for mobile view or small screen */}\n                <div className=\"\">\n                    <label htmlFor=\"left-sidebar-drawer\" className=\"btn btn-primary drawer-button lg:hidden\">\n                    <Bars3Icon className=\"h-5 inline-block w-5\"/></label>\n                    <h1 className=\"text-2xl font-semibold ml-2\">{pageTitle}</h1>\n                </div>\n\n                \n\n            <div className=\"order-last\">\n\n\n\n\n                {/* Notification icon */}\n                {/* onClick={() => openNotification()} */}\n                <button className=\"btn btn-ghost ml-4  btn-circle\" >\n                    <div className=\"indicator\">\n                        <BellIcon className=\"h-6 w-6\"/>\n                        {noOfNotifications > 0 ? <span className=\"indicator-item badge badge-secondary badge-sm\">{noOfNotifications}</span> : null }\n                    </div>\n                </button>\n\n\n                {/* Profile icon, opening menu on click */}\n                <div className=\"dropdown dropdown-end ml-4\">\n                    <label tabIndex={0} className=\"btn btn-ghost btn-circle avatar\">\n                        <div className=\"w-10 rounded-full\">\n                        <img src=\"https://placeimg.com/80/80/people\" alt=\"profile\" />\n                        </div>\n                    </label>\n                    <ul tabIndex={0} className=\"menu menu-compact dropdown-content mt-3 p-2 shadow bg-base-100 rounded-box w-52\">\n                        <li className=\"justify-between\">\n                            {/* to={'/app/settings-profile'} */}\n                        {/* <Link >  \n                            Profile Settings\n                            <span className=\"badge\">New</span>\n                            </Link> */}\n                        </li>\n                        <div className=\"divider mt-0 mb-0\"></div>\n                        {/* <li><a onClick={logoutUser}>Logout</a></li> */}\n                    </ul>\n                </div>\n            </div>\n            </div>\n\n        </>\n    )\n}\n\nexport default Header","import Header from \"./Header\";\nimport { BrowserRouter as Router , Route , Routes } from \"react-router-dom\";\nimport routes from \"../routes\";\nimport { Suspense,lazy } from \"react\";\n\nimport { useEffect,useRef } from \"react\";\nimport Student from \"../Student\";\n\n\nfunction PageContent()\n{\n    const mainContentRef = useRef(null);\n    const pageTitle = \"Sample\";\n\n    useEffect(() => {\n        mainContentRef.current.scroll({\n            top: 0,\n            behavior: \"smooth\"\n          });\n      }, [pageTitle])\n      return(\n        <div className=\"drawer-content flex flex-col \">\n            <Header/>\n            <main className=\"flex-1 overflow-y-auto pt-8 px-6  bg-base-200\" ref={mainContentRef}>\n                {/* fallback={<SuspenseContent />} */}\n                <Suspense >\n                   <Student/>\n                </Suspense>\n                <div className=\"h-16\"></div>\n            </main>\n        </div> \n    )\n}\n\n\nexport default PageContent\n\n\n\n{/* <Routes> */}\n{/* { */}\n    // routes.map((route, key) => {\n        // return(\n            // <Route\n                // key={key}\n                // exact={true}\n                // path={`${route.path}`}\n                // element={<route.component />}\n            // />\n        // )\n    // })\n{/* } */}\n{/*  */}\n// Redirecting unknown url to 404 page\n// <Route path=\"*\" element={<Page404 />} />\n{/* </Routes> */}","/** Icons are imported separatly to reduce build time */\n\nimport Squares2X2Icon from '@heroicons/react/24/outline/Squares2X2Icon'\n\nimport ArrowRightOnRectangleIcon from '@heroicons/react/24/outline/ArrowRightOnRectangleIcon'\nimport UserIcon from '@heroicons/react/24/outline/UserIcon'\nimport Cog6ToothIcon from '@heroicons/react/24/outline/Cog6ToothIcon'\n\nimport KeyIcon from '@heroicons/react/24/outline/KeyIcon'\nimport DocumentDuplicateIcon from '@heroicons/react/24/outline/DocumentDuplicateIcon'\n\nconst iconClasses = `h-6 w-6`\nconst submenuIconClasses = `h-5 w-5`\n\nconst routes = [\n\n  {\n    path: '/student/dashboard',\n    icon: <Squares2X2Icon className={iconClasses}/>, \n    name: 'Overview',\n  },\n\n//   {\n//     path: '', //no url needed as this has submenu\n//     icon: <DocumentDuplicateIcon className={`${iconClasses} inline` }/>, // icon component\n//     name: 'Pages', // name that appear in Sidebar\n//     submenu : [\n//       {\n//         path: '/login',\n//         icon: <ArrowRightOnRectangleIcon className={submenuIconClasses}/>,\n//         name: 'Login',\n//       },\n//       {\n//         path: '/register', //url\n//         icon: <UserIcon className={submenuIconClasses}/>, // icon component\n//         name: 'Register', // name that appear in Sidebar\n//       },\n//       {\n//         path: '/forgot-password',\n//         icon: <KeyIcon className={submenuIconClasses}/>,\n//         name: 'Forgot Password',\n//       }\n//     ]\n//   },\n//   {\n//     path: '', //no url needed as this has submenu\n//     icon: <Cog6ToothIcon className={`${iconClasses} inline` }/>, // icon component\n//     name: 'Settings', // name that appear in Sidebar\n//     submenu : [\n//       {\n//         path: '/app/settings-profile', //url\n//         icon: <UserIcon className={submenuIconClasses}/>, // icon component\n//         name: 'Profile', // name that appear in Sidebar\n//       }\n//     ]\n//   }\n  \n]\n\nexport default routes\n\n","import routes from \"../routes/sidebar\";\nimport { NavLink,Routes,Link,useLocation } from \"react-router-dom\";\nimport SidebarSubmenu from './SidebarSubmenu';\n\n\n\n\n// The school name is passed as the prop in this component\n\n\nfunction LeftSidebar({school_name}){\n    const location = useLocation();\n\n    return(\n        <div className=\"drawer-side \">\n            <label htmlFor=\"left-sidebar-drawer\" className=\"drawer-overlay\"></label> \n            <ul className=\"menu  pt-2 w-80 bg-base-100 text-base-content\">\n                <li className=\"mb-2 font-semibold text-xl\">\n                    \n                    {/* <Link to={'/app/welcome'}><img className=\"mask mask-squircle w-10\" src=\"/logo192.png\" alt=\"logo\"/>{school_name}</Link>  */}\n                    </li>\n                {\n                    routes.map((route, k) => {\n                        return(\n                            <li className=\"\" key={k}>\n                                {\n                                    route.submenu ? \n                                        <SidebarSubmenu {...route}/> : \n                                    (<NavLink\n                                        end\n                                        to={route.path}\n                                        className={({isActive}) => `${isActive ? 'font-semibold  bg-base-200 ' : 'font-normal'}`} >\n                                           {route.icon} {route.name}\n                                            {\n                                                location.pathname === route.path ? (<span className=\"absolute inset-y-0 left-0 w-1 rounded-tr-md rounded-br-md bg-primary \"\n                                                aria-hidden=\"true\"></span>) : null\n                                            }\n                                    </NavLink>)\n                                }\n                                \n                            </li>\n                        )\n                    })\n                }\n                  <li className=\"mb-2 flex flex-col  font-semibold text-xl \">\n                    <h4 className='text-sm'>Powered By :</h4>\n                    {/* <Link to={'/app/welcome'}>The School Aashram</Link> */}\n                  </li>\n            </ul>\n                     \n        </div>\n    )\n}\n\nexport default LeftSidebar\n\n\n\n","import PageContent from \"./PageContent\";\nimport LeftSidebar from \"./LeftSideBar\";\n\n\nimport { useEffect } from \"react\";\n\n\nfunction Layout()\n{\n    return(\n        <>\n          { /* Left drawer - containing page content and side bar (always open) */ }\n          <div className=\"drawer drawer-mobile\">\n              <input id=\"left-sidebar-drawer\" type=\"checkbox\" className=\"drawer-toggle\" />\n              <PageContent/>\n              <LeftSidebar school_name={'School Name'}/>\n          </div>\n          </>\n    )\n}\n\n\nexport default Layout;\n\n\n\n\n\n"],"names":["_ref","notices","_jsxs","className","children","_jsx","map","notice","index","title","description","labels_month","data_attendence_absent","Math","random","data_attendence_present","data_subject","source","count","conversionPercent","data_books_hand","data_efficieny","subject_efficiency","labels_performance","labels_subject","studentData","month","subject","score","sampleAttendence","date","attendance","timetableData","time","Monday","Tuesday","Wednesday","Thursday","Friday","breakTimingsData","booksData","name","author","timetable","breakTimings","_Fragment","slot","concat","includes","counter","gen_id","blink_id","icon","value","colorIndex","customStyles","content","position","top","left","right","bottom","marginRight","transform","width","height","backgroundColor","boxShadow","borderRadius","zIndex","handleResize","window","matchMedia","matches","addEventListener","COLORS","_useState","useState","_useState2","_slicedToArray","blink","setBlink","_useState3","_useState4","modalIsOpen","setIsOpen","useEffect","intervalId","setInterval","prevBlink","clearInterval","onClick","console","log","Modal","isOpen","onRequestClose","style","TimeTable","NoticeBoard","books","book","_objectDestructuringEmpty","subtitle","onAfterOpen","color","contentLabel","BookList","styleClass","topMargin","TopSideButtons","Subtitle","TitleCard","u","k","ResultsChart","_ref2","data","canvasRef","React","subjects","Array","from","Set","result","subjectAverages","subjectData","filter","average","reduce","total","length","ctx","current","getContext","chart","Chart","type","labels","datasets","label","subjectAverage","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","destroy","ref","selectedMonth","setSelectedMonth","filteredData","groupByMonth","currentValue","push","onChange","e","target","Object","entries","_ref3","colSpan","student","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Filler","Legend","fill","id","Line","responsive","plugins","legend","StudentResultCard","localizer","momentLocalizer","moment","StudentAttendanceCard","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","args","_key","call","apply","state","handleMonthSelection","setState","months","sampleData","props","events","start","Date","end","allDay","_createClass","key","this","Calendar","startAccessor","endAccessor","eventPropGetter","event","Component","BarElement","Bar","StudentAttendenceCard","ArcElement","heading","Doughnut","statsData","attendence_days_present","UserGroupIcon","CreditCardIcon","CircleStackIcon","UsersIcon","d","DashboardStats","_objectSpread","LineChart","BarChart","UserChannels","DoughnutChart","AmountStats","pageTitle","noOfNotifications","htmlFor","Bars3Icon","BellIcon","tabIndex","src","alt","mainContentRef","useRef","scroll","behavior","Header","Suspense","Student","path","Squares2X2Icon","school_name","location","useLocation","routes","route","submenu","SidebarSubmenu","NavLink","to","isActive","pathname","PageContent","LeftSidebar"],"sourceRoot":""}